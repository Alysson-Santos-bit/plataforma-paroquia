services:
  backend:
    build: ./backend
    ports:
      - "8080:8080"
    # A MUDANÇA CRUCIAL:
    # Agora, o backend só arranca depois de o 'healthcheck' da base de dados passar.
    depends_on:
      db:
        condition: service_healthy
    restart: always
    environment:
      # Passamos o endereço da base de dados como uma variável de ambiente.
      DATABASE_URL: "host=db user=user password=password dbname=paroquia_db port=5432 sslmode=disable"
      GIN_MODE: "release"
      JWT_KEY: "uma_chave_super_secreta_e_diferente_para_producao"
      ADMIN_EMAIL: "jdkacesso@gmail.com" # Mantenha o seu e-mail de admin aqui

  frontend:
    build: ./frontend
    ports:
      - "3000:80" 
    depends_on:
      - backend
    restart: always

  db:
    image: postgres:14-alpine
    restart: always
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=paroquia_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    # A FERRAMENTA DE DIAGNÓSTICO:
    # O Docker irá executar este comando para verificar se o PostgreSQL está pronto.
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d paroquia_db"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:

